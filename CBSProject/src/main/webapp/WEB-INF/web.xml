<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee https://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">

	<!-- The definition of the Root Spring Container shared by all Servlets and Filters -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/spring/root-context.xml</param-value>
	</context-param>
	
	<!-- Creates the Spring Container shared by all Servlets and Filters -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- Processes application requests -->
	<servlet>
		<servlet-name>appServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/spring/appServlet/servlet-context.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
		 <!-- 요기 추강   5M  1024*1024* 5 -->
		<multipart-config>
             <location>D:\team4\temp</location>
			<max-file-size>209715200</max-file-size>
			<max-request-size>209715200</max-request-size>
			<file-size-threshold>0</file-size-threshold>
		</multipart-config>
	</servlet>
		
	<servlet-mapping>
		<servlet-name>appServlet</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	
	<!-- 한글 처리 -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>
			org.springframework.web.filter.CharacterEncodingFilter
		</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<!-- 모든 요청에서 -->
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	
	
	<!-- multipart filter 추가하기(한글 처리 다음에 넣기!!!) -->
   <filter>
      <display-name>springMultipartFilter</display-name>
      <filter-name>springMultipartFilter</filter-name>
      <filter-class>org.springframework.web.multipart.support.MultipartFilter</filter-class>
   </filter>
   <filter-mapping>
      <filter-name>springMultipartFilter</filter-name>
      <url-pattern>/*</url-pattern>
   </filter-mapping>
	
	<!-- 스프링 시큐리티가 제공하는 서블릿 필터 클래스를 서블릿 컨테이너에 등록함(시큐리티체인이 이거임!!) -->
   <filter>
      <filter-name>springSecurityFilterChain</filter-name>
      <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
   </filter>
   <filter-mapping>
      <filter-name>springSecurityFilterChain</filter-name>
      <url-pattern>/*</url-pattern>
   </filter-mapping>
   
    <!-- 상태 코드를 사용하여 오류 페이지 설정 시작
   HTTP 오류 코드 정리
   - 400 : Bad Request. 문법 오류(잘못 입력한 url)
   - 404* : Not Found. 요청한 문서를 찾지 못함(url확인 및 캐시 삭제가 필요한 상태)
   - 405 : Method not allowed. 메소드 허용 안됨(메소드 매핑이 안 될 때 발생)
   - 415 : 서버의 요청에 대한 승인 거부. (ContentType, Content Encoding 데이터 확인 필요)
   - 500* : 서버 내부 오류. (웹 서버가 요청사항을 수행할 수 없을 때 발생)
   - 505 : HTTP Version Not Supported.
    -->
   <!--  <error-page>
    	<error-code>400</error-code>
    	<location>/error/error400</location>
    </error-page>
    <error-page>
    	<error-code>404</error-code>
    	<location>/error/error404</location>
    </error-page>
     <error-page>
    	<error-code>500</error-code>
    	<location>/error/error500</location>
    </error-page> -->
    <!--HTTP 상태 코드를 사용하여 오류 페이지 설정 끝  -->
    
    <!-- 예외 타입을 사용한 에러 페이지 설정 시작 
   웹 컨테이너(tomcat서버) 설정 파일(web.xml)의 exception-type 태그 요소에 예외 타입을 설정하고
   location 요소에 이동 대상 페이지 및 URI를 지정함
   
   IOException, SQLException, NullPointerException, ArrayIndexOutOfBoundsException,
   ArtimeticException(0으로 나눌경우)
   -->
  <!--  <error-page>
      <exception-type>java.lang.Exception</exception-type>
      <location>/error/errorException</location>
   </error-page> -->
   <!-- 예외 타입을 사용하여 오류 페이지 설정 시작 -->

</web-app>
